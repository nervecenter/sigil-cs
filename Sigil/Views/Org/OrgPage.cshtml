@using Sigil.Models
@using Sigil.ViewModels
@using Microsoft.AspNet.Identity
@using PagedList;
@using PagedList.Mvc;
@model OrgPageViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    Org thisOrg = Model.thisOrg;
    ViewBag.Title = "Sigil - " + thisOrg.orgName;

    UserVoteCol userVotes = Model.UserVM.UserVotes;//ViewBag.userVotes;
    IEnumerable<SubscriptionViewModel> userSubs = Model.UserVM.UserSubscriptions;//Sigil.Controllers.AccountController.userSubs( User );
}

<div class="col-md-9 col-lg-9">
    <img class="img-rounded img-responsive org-banner-small" src="@(thisOrg.Image.banner)">
    <div class="btn-group btn-group-sm btn-group-justified" style="margin-bottom:20px;">
        <a class="btn btn-default active">Main feed</a>
        <a class="btn btn-info" href="/@thisOrg.orgURL/responses">Responses</a>
        <a class="btn btn-success" href="/@thisOrg.orgURL/data">Data</a>
        @*<a class="btn btn-primary">Subscribe to @thisOrg.orgName</a>*@
        <script type="text/javascript" src="~/Scripts/subscriptions.js"></script>
        @if ( !Request.IsAuthenticated ) {
            <a class="btn btn-primary subscribe" onclick="redirectToLogin()">Subscribe to @thisOrg.orgName</a>
        } else if ( userSubs.Any<SubscriptionViewModel>( s => s.subObjectId == thisOrg.Id && s.subName == thisOrg.orgName ) ) {
            <a class="btn btn-danger unsubscribe" onclick="unsubscribe(this, '@thisOrg.orgURL')">Unsubscribe from @thisOrg.orgName</a>
        } else {
            <a class="btn btn-primary subscribe" onclick="subscribe(this, '@thisOrg.orgURL')">Subscribe to @thisOrg.orgName</a>
        }
    </div>
    <form>
        <div class="form-group">
            <label for="text">Search for feedback or post your own:</label><br />
            <input id="title-input" class="form-control" type="text" name="title" value="@Request.Form["title"]" placeholder="Search feedback or post your own" />
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Submit as new feedback</button>
        </div>
    </form>
    @foreach ( IssuePanelPartialVM issue in Model.orgIssues ) {
        /*var issuePanelModel = new Tuple<IssuePanelOptions, Issue>( new IssuePanelOptions() { inPanel = true, showOrg = false, showCat = false, showTopic = false, showUser = true,
                                                                                             userVoted = userVotes.Check_Vote( issue.Id, issue.Category.OrgId )}, 
                                                                   issue );*/
        @Html.Partial( "../Shared/_IssuePanelPartial", issue )
    }
    @*Page @issueList.PageCount < issueList.PageNumber ? 0 : issueList.PageNumber of @issueList.PageCount*@

    @Html.PagedListPager(Model.orgIssues, page => Url.Action("OrgPage","Org", new { page }))
</div>
@Html.Partial( "../Shared/_SideBar", userSubs )